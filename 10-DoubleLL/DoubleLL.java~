public class DoubleLL<E>{
    
    private class Node<e>{
	E data;
	Node<e> next, prev;
	public Node(E d){
	    this.data = d;
	}
	public String toString(){
	    return ""+ data;
	}
	public void setData(E d){ data = d;};
	public E getData() {  return data;};
	
	public void setNext(Node<e> n){ next = n;}
	public Node<E> getNext(){ return next;}

	public void setPrev(Node<E> p) {prev = p;}
	public Node<E> getPrev() {return prev;}
	
    }
    
    private Node<e> current;
    
    public void insert (E d){
	Node<E> n = new Node<E>(d);
	if (current == null){
	    current = n;
	}
	else {
	    n.next = current;
	    current.prev = n;
	    current = n;
	}
    }
    
    public E getCurrent(){
	return current.getData();
    }

    public void forward(){
	if (current.getNext() !=null)
	    current = current.getNext();
    }

    public void back(){
	if (current.getPrev() != null){
	    current = current.getPrev();
	}
    }
    
    public String toSTring(){
	if (current == null){
	    return "";
	}
	while (current.getPrev() != null)
	    current = current.getPrev();
	Node<E> tmp = current;
	String s = "";
	while (tmp != null){
	    s = s + tmp.getData() + " ";
	    temp = tmp.getNext();
	}
	return s;
    }

    public static void main(String[] args){
	DoubleLL<String> L = new DoubleLL<STring>();
	System.out.println(L);
	L.insert("hello");
	System.out.println(L);
	L.insert("world");
	System.out.println(L);
	L.insert("three");
	System.out.println(L);